// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "cockroachdb" // ou "mysql" ou outro provedor de banco de dados
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model AdoptionLocation {
  id           String    @id @default(uuid())
  name         String
  description  String
  latitude     Float
  longitude    Float
  address      String
  locationType LocationType @relation(fields: [locationTypeId], references: [id])
  locationTypeId  String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  animals      Animal[]
  contacts     Contact[]
  donations    Donation[]
}

model LocationType {
  id               String    @id @default(uuid())
  name             String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  adoptionLocations AdoptionLocation[]
}

model Animal {
  id                BigInt          @id @default(autoincrement())
  name              String
  size              String
  age               Int
  animalType        AnimalType   @relation(fields: [animalTypeId], references: [id])
  animalTypeId      String
  needsMedicalHelp  Boolean
  description       String
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  adoptionLocation  AdoptionLocation  @relation(fields: [adoptionLocationId], references: [id])
  adoptionLocationId String
}

model AnimalType {
  id           String    @id @default(uuid())
  name         String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  animals      Animal[]
}

model Contact {
  id               String    @id @default(uuid())
  phone            String?
  email            String?
  instagram        String?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  adoptionLocation AdoptionLocation  @relation(fields: [adoptionLocationId], references: [id])
  adoptionLocationId String
}

model Donation {
  id               String    @id @default(uuid())
  pixKey           String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  adoptionLocation AdoptionLocation @relation(fields: [adoptionLocationId], references: [id])
  adoptionLocationId String
}
